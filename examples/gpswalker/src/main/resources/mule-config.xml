<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:ajax="http://www.mulesoft.org/schema/mule/ajax"
      xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/3.0/mule-quartz.xsd
       http://www.mulesoft.org/schema/mule/ajax http://www.mulesoft.org/schema/mule/ajax/3.0/mule-ajax.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd">

    <ajax:connector name="ajaxServer" serverUrl="http://localhost:8081/services/gps" resourceBase="./src/main/webapp"/>

    <model>
        <service name="StrollerService">
            <description>
                A service that generates GPS coordinates in downtown San Francisco. These get mapped on a Google map
                at the browser. there is no fancy street walking algorithm so the results may vary.
                Note that this component is triggered by a scheduler configured using the @Schedule annotation
            </description>
            <!-- The configuration snippet below shows how to configure a scheduling endpoint in XML configuration instead of using
                 the @Schedule annotation on the component itself. Both methods are valid

            <inbound>
                <quartz:inbound-endpoint repeatInterval="3000" startDelay="3000" jobName="walkGenerator">
                    <quartz:event-generator-job/>
                </quartz:inbound-endpoint>
            </inbound>
            -->
            <component>
                <singleton-object class="org.mule.example.gpswalker.CityStroller"/>
            </component>
            <outbound>
                <pass-through-router>
                    <ajax:outbound-endpoint channel="/gpswalker"/>
                </pass-through-router>
            </outbound>
        </service>
    </model>
</mule>
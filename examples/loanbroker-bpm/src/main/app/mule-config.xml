<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:bpm="http://www.mulesoft.org/schema/mule/bpm"
    xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
    xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
       http://www.mulesoft.org/schema/mule/bpm http://www.mulesoft.org/schema/mule/bpm/3.0/mule-bpm.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.0/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.0/mule-scripting.xsd">

    <bpm:jbpm name="jbpm" />

    <jms:activemq-connector name="jmsConnector" />

    <!-- Customer loan requests to the Loan Broker -->
    <jms:endpoint name="CustomerRequests" queue="customer.requests" exchange-pattern="one-way"/>
    <!-- Requests to the credit agency -->
    <jms:endpoint name="CreditAgency" queue="credit.agency" exchange-pattern="one-way"/>
    <!-- Customer credit profiles from the credit agency -->
    <jms:endpoint name="CreditProfiles" queue="credit.profiles" exchange-pattern="one-way"/>
    <!-- Final loan quote to the customer -->
    <jms:endpoint name="CustomerResponses" queue="customer.responses" exchange-pattern="one-way"/>
    <!-- Bigger banks handle bigger loans.  -->
    <vm:endpoint name="BigBank" path="big.bank" exchange-pattern="request-response" />
    <vm:endpoint name="MediumBank" path="medium.bank" exchange-pattern="request-response" />
    <vm:endpoint name="SmallBank" path="small.bank" exchange-pattern="request-response" />

    <model name="loan-broker">

        <!-- ***************************************************
            HTTP Front End
            *************************************************** -->

        <service name="HttpService">
            <inbound>
                <inbound-endpoint ref="HttpUrlCustomerRequests" />
            </inbound>
            <outbound>
                <pass-through-router>
                    <outbound-endpoint ref="CustomerRequests" />
                </pass-through-router>
            </outbound>
        </service>

        <!-- ***************************************************
            Process Engine
            *************************************************** -->

        <!-- Messages sent to the process engine -->
        <service name="ToBPMS">
            <inbound>
                <!-- Incoming message = CustomerRequest -->
                <inbound-endpoint ref="CustomerRequests" />
                <!-- Incoming message = CreditProfile -->
                <inbound-endpoint ref="CreditProfiles" />
            </inbound>
            <bpm:process processName="LoanBroker" processDefinition="loan-broker-process.jpdl.xml" />
        </service>


        <!-- ***************************************************
            Services
            *************************************************** -->
        <!-- The credit agency service will get the credit profile for a customer -->
        <service name="ACreditAgency">
            <inbound>
                <inbound-endpoint ref="CreditAgency" />
            </inbound>
            <component class="org.mule.example.loanbroker.credit.DefaultCreditAgency" />
            <outbound>
                <pass-through-router>
                    <outbound-endpoint ref="CreditProfiles" />
                </pass-through-router>
            </outbound>
        </service>

        <!-- These are mock bank services that represent remote bank loan services -->
        <service name="ABigBank">
            <inbound>
                <inbound-endpoint ref="BigBank" />
            </inbound>
            <component class="org.mule.example.loanbroker.bank.Bank" />
        </service>
        <service name="AMediumBank">
            <inbound>
                <inbound-endpoint ref="MediumBank" />
            </inbound>
            <component class="org.mule.example.loanbroker.bank.Bank" />
        </service>
        <service name="ASmallBank">
            <inbound>
                <inbound-endpoint ref="SmallBank" />
            </inbound>
            <component class="org.mule.example.loanbroker.bank.Bank" />
        </service>
    </model>
    
    <http:endpoint name="HttpUrlCustomerRequests" address="http://0.0.0.0:11081"
                   exchange-pattern="request-response">
        <!-- Translate request params into properties map -->
        <http:body-to-parameter-map-transformer name="HttpRequestToMap"/>
        <!-- Create java objects for the LoanBroker requests-->
        <script:transformer>
            <script:script engine="groovy">
                import org.mule.example.loanbroker.messages.*
                import org.mule.example.loanbroker.bank.*
                import org.mule.example.loanbroker.credit.*

                //println "\n\n\n\n$payload"

                // remember 'payload' is a Map/String,String/ from the previous transformer
                def customerName = payload.name ?: "Muley" // fallback to defaults if no value provided in url
                def ssn = (payload.ssn ?: 1234) as Integer
                def amount = (payload.amount ?: 20000) as Integer
                def term = (payload.term ?: 48) as Integer

                def c = new Customer(customerName,  ssn)
                result = new CustomerQuoteRequest(c, amount, term)
            </script:script>
        </script:transformer>
        <response>
            <expression-transformer>
                <return-argument evaluator="string" expression="Your loan request has been submitted."/>
            </expression-transformer>
        </response>
    </http:endpoint>

</mule>

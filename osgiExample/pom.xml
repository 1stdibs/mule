<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule</groupId>
        <artifactId>mule</artifactId>
        <version>4.0-SNAPSHOT</version>
    </parent>
    <artifactId>osgi-example</artifactId>
    <packaging>bundle</packaging>
    <name>Mule OSGi Example</name>
    <description>Example bundle using mule in a OSGi container</description>

    <properties>
        <skipExportTests>false</skipExportTests>
        <licensePath>../LICENSE_HEADER.txt</licensePath>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.5.0</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <!--<Export-Package>org.mule.example.osgi.*</Export-Package>-->
                        <!--//TODO(pablo.kraan): OSGi - I don' like to have to import VM package here. Find a better way to do it-->
                        <Import-Package>
                            com.eaio.uuid,
                            org.mule,
                            org.mule.config.bootstrap,
                            org.mule.config.factories,
                            org.mule.el.mvel,
                            org.mule.endpoint,
                            org.mule.execution,
                            org.mule.management.stats,
                            org.mule.module.springconfig.editors,
                            org.mule.module.springconfig.processors,
                            org.mule.module.springconfig.parsers.collection,
                            org.mule.retry.policies,
                            org.mule.security,
                            org.mule.session,
                            org.mule.util,
                            org.mule.util.queue,
                            org.mule.util.store,
                            org.mule.util.lock,
                            org.mule.transport,
                            org.mule.transport.polling,
                            org.mule.transport.vm,
                            org.mule.transformer.simple,
                            org.springframework.beans.factory.config,
                            org.mule.model.seda,
                            org.mule.construct,
                            org.mule.module.springconfig.factories,
                            org.mule.api.processor,
                            *
                        </Import-Package>
                        <DynamicImport-Package>*</DynamicImport-Package>
                        <Bundle-Activator>org.mule.module.springconfig.osgi.MuleApplicationActivator</Bundle-Activator>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.mule</groupId>
            <artifactId>mule-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-spring-config</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-vm</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-functional</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>

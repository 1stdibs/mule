/*
 * Generated by the Mule Configuration Pattern Archetype. http://mule.mulesoft.org
 */
package ${patternPackageName};

import org.mule.api.MuleContext;
import org.mule.api.MuleException;
import org.mule.api.construct.FlowConstructInvalidException;
import org.mule.construct.AbstractFlowConstruct;
import org.mule.construct.processor.FlowConstructStatisticsMessageObserver;
import org.mule.interceptor.LoggingInterceptor;
import org.mule.processor.builder.InterceptingChainMessageProcessorBuilder;

public class ${patternClassName} extends AbstractFlowConstruct
{
    // TODO add pattern-specific immutable attributes

    // TODO add pattern-specific constructor arguments
    public ${patternClassName}(String name, MuleContext muleContext)
    {
        super(name, muleContext);

        // TODO set pattern-specific immutable attributes
    }

    @Override
    protected void validateConstruct() throws FlowConstructInvalidException
    {
        super.validateConstruct();

        // TODO perform additional validation on the pattern attributes

        // In case of error, use:
        // throw new FlowConstructInvalidException(MessageFactory.createStaticMessage("error description"), this);
    }

    @Override
    protected void configureMessageProcessors(InterceptingChainMessageProcessorBuilder builder)
        throws MuleException
    {
        builder.chain(new LoggingInterceptor());
        builder.chain(new FlowConstructStatisticsMessageObserver());

        // TODO add specific message processors to reify the expected pattern behavior
    }
}

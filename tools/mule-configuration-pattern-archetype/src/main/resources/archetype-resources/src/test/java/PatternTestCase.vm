/*
 * Generated by the Mule Configuration Pattern Archetype. http://mule.mulesoft.org
 */
package ${patternPackageName};

import org.apache.commons.lang.RandomStringUtils;
import org.mule.api.MuleEvent;
import org.mule.construct.AbstractFlowConstruct;
import org.mule.construct.AbstractFlowConstuctTestCase;
import org.mule.tck.MuleTestUtils;

public class ${patternClassName}TestCase extends AbstractFlowConstuctTestCase
{
    private ${patternClassName} ${patternVariableName};

    @Override
    protected void doSetUp() throws Exception
    {
        super.doSetUp();
        ${patternVariableName} = new ${patternClassName}("${patternTagName}-test", muleContext);
    }

    @Override
    protected AbstractFlowConstruct getFlowConstruct()
    {
        return ${patternVariableName};
    }

    public void testProcess() throws Exception
    {
        ${patternVariableName}.initialise();
        ${patternVariableName}.start();

        final String testPayload = RandomStringUtils.randomAlphanumeric(10);
        final MuleEvent response = ${patternVariableName}.process(MuleTestUtils.getTestInboundEvent(testPayload,
            muleContext));
        assertEquals(testPayload, response.getMessageAsString());
    }
}
